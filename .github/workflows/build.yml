on:
  push:
    branches: [ build ]

jobs:
  master_deploy:
    runs-on: macos-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Find first scheme of default project
        run: |
          echo "SCHEME=$(xcodebuild -list -json | jq -r '.project.schemes[0]')" >> $GITHUB_ENV
          
      - name: Set environment variables from project settings
        run: |
          function set-env-from-proj { 
            echo "$1=$(xcodebuild -scheme "${{ env.SCHEME }}" -showBuildSettings | grep " $1 " | sed "s/[ ]*$1 = //")" >> $GITHUB_ENV
          }
          set-env-from-proj FULL_PRODUCT_NAME
          set-env-from-proj INSTALL_PATH
          set-env-from-proj PRODUCT_BUNDLE_IDENTIFIER
          set-env-from-proj PRODUCT_MODULE_NAME
          set-env-from-proj PRODUCT_NAME
          set-env-from-proj PROJECT_NAME

      - name: Build and test app
        shell: bash --noprofile --norc -eo pipefail {0}
        run: |
          xcodebuild -scheme "${{ env.SCHEME }}" test CODE_SIGN_IDENTITY=- | xcpretty
      - name: Build and install app
        shell: bash --noprofile --norc -eo pipefail {0}
        run: |
          xcodebuild -scheme "${{ env.SCHEME }}" install DSTROOT=build/root | xcpretty
      - name: Package app
        run: |
          hdiutil create \
                  -fs HFS+ \
                  -srcfolder "build/root/${{ env.INSTALL_PATH }}/${{ env.FULL_PRODUCT_NAME }}" \
                  -volname "${{ env.PRODUCT_NAME }}" "build/${{ env.PRODUCT_MODULE_NAME }}.dmg"

      - name: Release app
        uses: softprops/action-gh-release@v1
        with:
          files: build/${{ env.PRODUCT_MODULE_NAME }}.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
